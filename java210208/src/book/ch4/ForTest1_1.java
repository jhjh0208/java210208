package book.ch4;
//자바언어를 사용해서 코딩을 전개하려면 보안문제로 반드시 패키지를 정의하도록 권장하고 있다. book.ch4
//디폴트패키지는 불가하다.
//그 다음에 클래스 선언문이 온다. - 형식이다, 표준이다, 약속이다.
//모든 코딩은 class선언의 좌중괄호와 우중괄호 안에 와야 한다. - 왜 그렇게 해야만 하나요? 자바는 기본 단위가 클래스이다.
//콜백메소드이다. - 시스템이 호출하는 메소드이다.- 개발자는 죽어도 호출할 수 없다. - main메소드 안에 코딩하는 것은 나쁜 방법이다.
//메인메소드를 선언하려면 반드시 클래스 선언이 먼저이다, - 처리 주체가 JVM, 즉 가상머신이다. - 일꾼이 가상머신이다,
//모든 코딩의 기준은 자바가상 머신이 해석할 수 있는 방식으로 코딩이 전개되어야 한다.
//클래스 선언하기는
//접근제한자 class라는 예약어 그리고 클래스명 순서로 선언됩니다.
//public private protected 같은 폴더(패키지)에 있는 클래스 끼리는 공유가능하다. friendly상태다. class A{}
//클래스 내부는 선언부와 메소드선언부로 나누어서 코딩을 전개해본다.
public class ForTest1_1 {
	//선언부-전역변수이다, 초기화를 생략할 수 있다. 뭔지는 모르지만 생성자가 있는데 역할리 전변의 초기화를 담당한다.
	//지역변수는 선언이 불가함.
	//if문이나 for문은 사용불가함. - 실행문을 갖고 있다. hap = hap+i//실행문 공식 알고리즘
	//선언과 초기화를 분리할 수 없다.-컴파일이 안되니까 실핼할 수 없어.
	//int i; i=10; <못함. but 메소드 안에서는 된다. 선언부에서만 안된다.
	//if(true) {} //실행문은 선언부에 사용할 수 없다. 
	//메소드 안에 메소드 선언은 하지 않는다. 왜냐하면 호출할 수 없으니까...
	//예외를 많이 둔다.
	//상속은 결합도가 높다, 상속은 꼬랐다.단위 테스트 못함.
	//반복되는 코드는 줄여야 한다.
	//이중으로 관리되지 않도록 해야한다.
	
	//////////////////////////////////////////////////end of 선언부
	//메소드를 선언한 영역 - 변수를 선언하는 구간과 구분해야한다.
	void methodA() {}//friendly상태이다.
	public static void main(String[] args) {
		int i = 0;
		int hap1 = 0;//홀수의 합을 담기
		int hap2 = 0;//짝수의 합을 담기
		for(i=1; i<=10; i=i+1) {
			//System.out.println(i);
			if(i%2==1) {//너 홀수인거야? 네
				hap1  = hap1 + i;
			}
			else{//너 짝수인거야? 네
				hap2  = hap2 + i;
			}
		
		
		
		}
         	
		//나는 for문 밖에서 한번만 30을 출력하고 싶어요
		
		//System.out.println("1부터 10까지 세면서 짝수의 합을 구한 결과는"+hap);
		System.out.println("===================================");
		System.out.println("1부터 10까지 세면서 홀수의 합을 구한 결과는"+hap1);
		System.out.println("1부터 10까지 세면서 짝수의 합을 구한 결과는"+hap2);
		
	}

}
